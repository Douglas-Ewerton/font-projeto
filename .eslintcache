[{"D:\\Codes\\Front-end Trabalho Final\\web\\src\\components\\Navbar.tsx":"1","D:\\Codes\\Front-end Trabalho Final\\web\\src\\routes.tsx":"2","D:\\Codes\\Front-end Trabalho Final\\web\\src\\pages\\Marcacao.tsx":"3","D:\\Codes\\Front-end Trabalho Final\\web\\src\\index.tsx":"4","D:\\Codes\\Front-end Trabalho Final\\web\\src\\pages\\pacienetes.tsx":"5","D:\\Codes\\Front-end Trabalho Final\\web\\src\\pages\\PacienteEdit.tsx":"6","D:\\Codes\\Front-end Trabalho Final\\web\\src\\App.tsx":"7","D:\\Codes\\Front-end Trabalho Final\\web\\src\\services\\api.ts":"8","D:\\Codes\\Front-end Trabalho Final\\web\\src\\pages\\cadastro.tsx":"9","D:\\Codes\\Front-end Trabalho Final\\web\\src\\pages\\Paciente.tsx":"10","D:\\Codes\\Front-end Trabalho Final\\web\\src\\pages\\Ficha.tsx":"11"},{"size":2643,"mtime":1608242247838,"results":"12","hashOfConfig":"13"},{"size":948,"mtime":1607977792568,"results":"14","hashOfConfig":"13"},{"size":5340,"mtime":1608005124459,"results":"15","hashOfConfig":"13"},{"size":200,"mtime":1607393581534,"results":"16","hashOfConfig":"13"},{"size":2760,"mtime":1607999252762,"results":"17","hashOfConfig":"13"},{"size":8874,"mtime":1608001885430,"results":"18","hashOfConfig":"13"},{"size":360,"mtime":1607824547796,"results":"19","hashOfConfig":"13"},{"size":121,"mtime":1607413760193,"results":"20","hashOfConfig":"13"},{"size":7094,"mtime":1607997779164,"results":"21","hashOfConfig":"13"},{"size":7532,"mtime":1607908741180,"results":"22","hashOfConfig":"13"},{"size":1750,"mtime":1608001566213,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1w0l1fp",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"39"},"D:\\Codes\\Front-end Trabalho Final\\web\\src\\components\\Navbar.tsx",["53","54","55","56"],"D:\\Codes\\Front-end Trabalho Final\\web\\src\\routes.tsx",[],"D:\\Codes\\Front-end Trabalho Final\\web\\src\\pages\\Marcacao.tsx",["57","58","59","60","61","62","63"],"import React, {ChangeEvent,useEffect,useState,FormEvent} from 'react';\r\nimport {useHistory} from 'react-router-dom'\r\nimport {Link} from 'react-router-dom';\r\nimport { Button,Form,Container,Table,Col} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {AiFillDelete, AiOutlinePlus,AiOutlineForm} from 'react-icons/ai'\r\n\r\nimport moment from  'moment';\r\n\r\nimport {useParams} from 'react-router-dom'\r\nimport api from '../services/api';\r\nimport { time } from 'console';\r\n\r\ninterface Marcacao {\r\n\r\n    \r\n    nome: string;\r\n    telefone: string;\r\n    dataConsulta: Date;\r\n\r\n}\r\n\r\ninterface MarcacaoList {\r\n\r\n    id: number;\r\n    nome: string;\r\n    telefone: string;\r\n    dataConsulta: Date;\r\n    \r\n}\r\n/*\r\ninterface MarcacaoParams {\r\n    id: string;\r\n}\r\n*/\r\n\r\nfunction Marcacao (){\r\n    \r\n    const history = useHistory();\r\n    //const params = useParams<MarcacaoParams>();\r\n\r\n    const [marcacoes, setMarcacoes] = useState<MarcacaoList[]>([])\r\n    \r\n    \r\n    const [model,setModel] = useState<Marcacao>({\r\n\r\n        \r\n        nome: '',\r\n        telefone: '',\r\n        dataConsulta: (new Date())\r\n        \r\n    })\r\n\r\n    function uptadeModel(e: ChangeEvent<HTMLInputElement>) {\r\n        \r\n        setModel({\r\n            ...model,\r\n            [e.target.name]: e.target.value\r\n\r\n        })\r\n    } \r\n\r\n    useEffect(() =>{\r\n        FindMarcacao()\r\n    }, [])\r\n\r\n    async function FindMarcacao (){\r\n        \r\n    \r\n        const response = await api.get('marcacoes');\r\n        setMarcacoes(response.data)\r\n            \r\n    }\r\n\r\n    async function Deletar(){\r\n        \r\n    \r\n        const response = await api.delete(`marcacao/delete`)\r\n\r\n        alert(\"Marcação deletada!\");\r\n\r\n        \r\n            \r\n    }\r\n\r\n    async function SubmitForm (e: FormEvent){\r\n        e.preventDefault()\r\n    \r\n        const response = await api.post('marcacao', model);\r\n\r\n        alert(\"Marco realizada!\");\r\n\r\n        history.push('/marcacao');\r\n\r\n            \r\n    }\r\n    return (\r\n        \r\n        <Container>\r\n            \r\n            <Form onSubmit={SubmitForm}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} xs={5}>\r\n                        <Form.Label>Nome:</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            name=\"nome\"\r\n                            onChange={(e: ChangeEvent<HTMLInputElement>) =>  uptadeModel(e)}\r\n                            />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Telefone:</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            name=\"telefone\"\r\n                            onChange={(e: ChangeEvent<HTMLInputElement>) =>  uptadeModel(e)}\r\n                            />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Data:</Form.Label>\r\n                        <Form.Control \r\n                            type=\"date\" \r\n                            name=\"dataConsulta\"\r\n                            onChange={(e: ChangeEvent<HTMLInputElement>) =>  uptadeModel(e)}\r\n                            />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Hora:</Form.Label>\r\n                        <Form.Control \r\n                            type=\"time\" \r\n                            \r\n                            />\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        <AiOutlinePlus />\r\n                    </Button>\r\n                </Form.Row>\r\n            </Form>\r\n\r\n            <Table striped bordered hover>\r\n                <thead className=\"thead-dark\">\r\n                    <tr>\r\n                    <th>Id</th>\r\n                    <th>Nome</th>\r\n                    <th>Telefone</th>\r\n                    <th>id</th>\r\n                    <th style={{textAlign:'center'}}>Cadastrar</th>\r\n                    <th style={{textAlign:'center'}}>Deletar</th>\r\n                    \r\n                    </tr>\r\n                </thead>\r\n                \r\n                {   \r\n                   marcacoes.map(marcacoes => (\r\n                    <tbody>\r\n                        <tr >\r\n                        <td>{marcacoes.nome}</td>\r\n                        <td>{marcacoes.telefone}</td>\r\n                        <td>{marcacoes.dataConsulta}</td>\r\n                        <td>{marcacoes.id}</td>\r\n                        <td style={{textAlign:'center'}}>\r\n                            <Button variant=\"primary\"type=\"button\" href=\"/cadastro\" >\r\n                                <AiOutlineForm /> \r\n                            </Button>\r\n                        </td>\r\n                        <td style={{textAlign:'center'}}>\r\n                            <Button variant=\"danger\" onClick={Deletar} type=\"button\">\r\n                                <AiFillDelete />\r\n                            </Button>\r\n                        </td>\r\n                        </tr>\r\n                    </tbody>\r\n                    ))\r\n                }\r\n                \r\n            </Table>\r\n            \r\n        </Container>\r\n\r\n        \r\n    )\r\n\r\n}\r\n\r\nexport default Marcacao;\r\n","D:\\Codes\\Front-end Trabalho Final\\web\\src\\index.tsx",[],["64","65"],"D:\\Codes\\Front-end Trabalho Final\\web\\src\\pages\\pacienetes.tsx",["66"],"D:\\Codes\\Front-end Trabalho Final\\web\\src\\pages\\PacienteEdit.tsx",["67","68","69","70","71"],"import React, {ChangeEvent,useEffect,useState,FormEvent} from 'react';\r\nimport {useHistory} from 'react-router-dom'\r\nimport {Link} from 'react-router-dom';\r\nimport { Button,Form,Container,Table,Col} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nimport {useParams} from 'react-router-dom'\r\nimport api from '../services/api';\r\n\r\ninterface Paciente {\r\n\r\n    nome: string;\r\n    email: string;\r\n    telefone: string;\r\n    cpf: string;\r\n    sexo: string;\r\n    cep: string;\r\n    logradouro: string;\r\n    bairro: string\r\n    localidade: string;\r\n    uf: string;\r\n    complemento: string;\r\n    ficha: string;\r\n    \r\n    \r\n}\r\n\r\ninterface PacienteParams {\r\n    id: string;\r\n}\r\n\r\nfunction PacienteEdit (){\r\n\r\n    const history = useHistory();\r\n    const params = useParams<PacienteParams>();\r\n    \r\n\r\n    const [model,setModel] = useState<Paciente>({\r\n\r\n        nome: '',\r\n        email: '',\r\n        telefone: '',\r\n        cpf: '',\r\n        sexo: '',\r\n        cep: '',\r\n        logradouro: '',\r\n        bairro: '',\r\n        localidade: '',\r\n        uf: '',\r\n        complemento: '',\r\n        ficha: ''\r\n\r\n    })\r\n\r\n    useEffect(() =>{\r\n        findPaciente(params.id)\r\n    }, [params.id])\r\n    \r\n    function uptadeModel(e: ChangeEvent<HTMLInputElement>) {\r\n        \r\n        setModel({\r\n            ...model,\r\n            [e.target.name]: e.target.value\r\n\r\n        })\r\n    } \r\n\r\n    async function Deletar(){\r\n        \r\n    \r\n        const response = await api.delete(`paciente/${params.id}/delete`)\r\n\r\n        alert(\"Cadastro deletado!\");\r\n\r\n        history.push('/');\r\n            \r\n    }\r\n\r\n    async function SubmitForm (e: FormEvent){\r\n        e.preventDefault()\r\n\r\n            \r\n        const response = await api.put(`paciente/${params.id}/editar`, model);\r\n\r\n        alert(\"Cadastro editado!\");\r\n\r\n         \r\n    }\r\n\r\n    async function findPaciente (id: string){\r\n        \r\n        const response = await api.get(`paciente/${params.id}`);\r\n        setModel({\r\n\r\n            nome: response.data.nome,\r\n            telefone: response.data.telefone,\r\n            email: response.data.email,\r\n            cpf: response.data.cpf,\r\n            sexo: response.data.sexo,\r\n            cep: response.data.cep,\r\n            logradouro: response.data.logradouro,\r\n            bairro: response.data.bairro,\r\n            localidade: response.data.localidade,\r\n            uf: response.data.uf,\r\n            complemento: response.data.complemento,\r\n            ficha: response.data.ficha\r\n            \r\n        })\r\n            \r\n    }\r\n    return (\r\n        <Container>\r\n            \r\n            <Form onSubmit={SubmitForm} >\r\n                <h2>Dados Pessoais:</h2>\r\n                <Form.Group>\r\n                    <Form.Label>Nome:</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Nome\" \r\n                        value={model.nome}\r\n                        name=\"nome\" \r\n                        onChange={(e: ChangeEvent<HTMLInputElement>) =>  uptadeModel(e)} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Email:</Form.Label>\r\n                    <Form.Control \r\n                        type=\"email\" \r\n                        placeholder=\"Email\" \r\n                        value={model.email}\r\n                        name=\"email\" \r\n                        onChange={(e: ChangeEvent<HTMLInputElement>) =>  uptadeModel(e)} />\r\n                </Form.Group>\r\n                <Form.Row>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Telefone:</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Telefone\" \r\n                            value={model.telefone}\r\n                            name=\"telefone\"\r\n                            onChange={(e: ChangeEvent<HTMLInputElement>) =>  uptadeModel(e)} />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>CPF:</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"CPF\" \r\n                            value={model.cpf}\r\n                            name=\"cpf\"\r\n                            onChange={(e: ChangeEvent<HTMLInputElement>) =>  uptadeModel(e)} />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Data Nascimento:</Form.Label>\r\n                        <Form.Control type=\"date\" />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Group>\r\n                <Form.Label>Sexo:</Form.Label>\r\n                    <Form.Check \r\n                        type=\"radio\"\r\n                        label=\"M\"\r\n                        name=\"sexo\"\r\n                        value={model.sexo}\r\n                        onChange={(e: ChangeEvent<HTMLInputElement>) =>  uptadeModel(e)}\r\n                    />\r\n                    <Form.Check \r\n                        type=\"radio\"\r\n                        label=\"F\"\r\n                        name=\"sexo\"\r\n                        value={model.sexo}\r\n                        onChange={(e: ChangeEvent<HTMLInputElement>) =>  uptadeModel(e)}\r\n                    />\r\n                </Form.Group>\r\n                <h2>Endereço:</h2>\r\n                <Form.Row>\r\n                    <Form.Group>\r\n                        <Form.Label>Cep:</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            value={model.cep}\r\n                            name=\"cep\" \r\n                            onChange={(e: ChangeEvent<HTMLInputElement>) =>  uptadeModel(e)}\r\n                            />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Logradouro:</Form.Label>\r\n                        <Form.Control \r\n                        type=\"text\" \r\n                        name=\"logradouro\" \r\n                        value={model.logradouro}\r\n                        onChange={(e: ChangeEvent<HTMLInputElement>) =>  uptadeModel(e)}\r\n                            />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Bairro:</Form.Label>\r\n                        <Form.Control \r\n                        type=\"text\" \r\n                        name=\"bairro\" \r\n                        value={model.bairro}\r\n                        onChange={(e: ChangeEvent<HTMLInputElement>) =>  uptadeModel(e)}\r\n                            />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Localidade:</Form.Label>\r\n                        <Form.Control \r\n                        type=\"text\" \r\n                        name=\"localidade\" \r\n                        value={model.localidade}\r\n                        onChange={(e: ChangeEvent<HTMLInputElement>) =>  uptadeModel(e)}\r\n                            />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>UF:</Form.Label>\r\n                        <Form.Control \r\n                        type=\"text\" \r\n                        name=\"uf\" \r\n                        value={model.uf}\r\n                        onChange={(e: ChangeEvent<HTMLInputElement>) =>  uptadeModel(e)}\r\n                            />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Group   >\r\n                    <Form.Label>Complemento:</Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={3}\r\n                        type=\"textarea\" \r\n                        name=\"complemento\" \r\n                        value={model.complemento}\r\n                        onChange={(e: ChangeEvent<HTMLInputElement>) =>  uptadeModel(e)}\r\n                        />\r\n                </Form.Group>\r\n                <Form.Group   >\r\n                    <Form.Label>Ficha:</Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={30}\r\n                        type=\"textarea\" \r\n                        name=\"ficha\" \r\n                        value={model.ficha}\r\n                        onChange={(e: ChangeEvent<HTMLInputElement>) =>  uptadeModel(e)}\r\n                        />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"success\" type=\"submit\" >\r\n                    Salvar\r\n                \r\n                </Button>\r\n                <Button variant=\"danger\" type=\"button\" onClick={Deletar} >\r\n                    Deletar\r\n\r\n                </Button>\r\n            </Form>\r\n\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\nexport default PacienteEdit;\r\n",["72","73"],"D:\\Codes\\Front-end Trabalho Final\\web\\src\\App.tsx",["74","75"],"import React from 'react';\nimport { BrowserRouter,Switch,Route} from 'react-router-dom';\nimport './styles/global.css';\nimport NavbarComponet from './components/Navbar';\nimport Routes from './routes';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <NavbarComponet /> \n      <Routes />\n       \n    </BrowserRouter>\n     \n    \n  );\n}\n\nexport default App;\n","D:\\Codes\\Front-end Trabalho Final\\web\\src\\services\\api.ts",[],"D:\\Codes\\Front-end Trabalho Final\\web\\src\\pages\\cadastro.tsx",["76","77","78","79"],"D:\\Codes\\Front-end Trabalho Final\\web\\src\\pages\\Paciente.tsx",["80","81","82","83","84","85"],"import React, {ChangeEvent,useEffect,useState,FormEvent} from 'react';\r\nimport {useHistory} from 'react-router-dom'\r\nimport {Link} from 'react-router-dom';\r\nimport { Button,Form,Container,Table,Col} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nimport {useParams} from 'react-router-dom'\r\nimport api from '../services/api';\r\n\r\ninterface Paciente {\r\n\r\n    nome: string;\r\n    email: string;\r\n    telefone: string;\r\n    cpf: string;\r\n    sexo: string;\r\n    cep: string;\r\n    logradouro: string;\r\n    bairro: string\r\n    localidade: string;\r\n    uf: string;\r\n    complemento: string;\r\n    \r\n    \r\n    \r\n    \r\n}\r\n\r\ninterface PacienteParams {\r\n    id: string;\r\n}\r\n\r\nfunction Paciente (){\r\n\r\n    const history = useHistory();\r\n    const params = useParams<PacienteParams>();\r\n    \r\n\r\n    const [model,setModel] = useState<Paciente>({\r\n\r\n        nome: '',\r\n        email: '',\r\n        telefone: '',\r\n        cpf: '',\r\n        sexo: '',\r\n        cep: '',\r\n        logradouro: '',\r\n        bairro: '',\r\n        localidade: '',\r\n        uf: '',\r\n        complemento: '',\r\n    \r\n        \r\n          \r\n    })\r\n\r\n    useEffect(() =>{\r\n        findPaciente(params.id)\r\n    }, [params.id])\r\n    \r\n    function uptadeModel(e: ChangeEvent<HTMLInputElement>) {\r\n        \r\n        setModel({\r\n            ...model,\r\n            [e.target.name]: e.target.value\r\n\r\n        })\r\n    } \r\n\r\n    async function findPaciente (id: string){\r\n        \r\n        const response = await api.get(`paciente/${params.id}`);\r\n        setModel({\r\n\r\n            nome: response.data.nome,\r\n            telefone: response.data.telefone,\r\n            email: response.data.email,\r\n            cpf: response.data.cpf,\r\n            sexo: response.data.sexo,\r\n            cep: response.data.cep,\r\n            logradouro: response.data.logradouro,\r\n            bairro: response.data.bairro,\r\n            localidade: response.data.localidade,\r\n            uf: response.data.uf,\r\n            complemento: response.data.complemento,\r\n            \r\n\r\n        })\r\n            \r\n    }\r\n    return (\r\n        <Container>\r\n           \r\n            <Form>\r\n                <h2>Dados Pessoais:</h2>\r\n                <Form.Group>\r\n                    <Form.Label>Nome:</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Nome\" \r\n                        value={model.nome}\r\n                        name=\"nome\" \r\n                        disabled \r\n                        />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Email:</Form.Label>\r\n                    <Form.Control \r\n                        type=\"email\" \r\n                        placeholder=\"Email\" \r\n                        value={model.email}\r\n                        name=\"email\" \r\n                        disabled \r\n                        />\r\n                </Form.Group>\r\n                <Form.Row>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Telefone:</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"Telefone\" \r\n                            value={model.telefone}\r\n                            name=\"telefone\"\r\n                            disabled \r\n                             />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>CPF:</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            placeholder=\"CPF\" \r\n                            value={model.cpf}\r\n                            name=\"cpf\"\r\n                            disabled \r\n                             />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Data Nascimento:</Form.Label>\r\n                        <Form.Control \r\n                            type=\"date\" \r\n                            \r\n                            disabled />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Group>\r\n                <Form.Label>Sexo:</Form.Label>\r\n                    <Form.Check \r\n                        type=\"radio\"\r\n                        label=\"M\"\r\n                        name=\"sexo\"\r\n                        value={model.sexo}\r\n                        disabled \r\n                        \r\n                    />\r\n                    <Form.Check \r\n                        type=\"radio\"\r\n                        label=\"F\"\r\n                        name=\"sexo\"\r\n                        value={model.sexo}\r\n                        disabled \r\n                        \r\n                    />\r\n                </Form.Group>\r\n                <h2>Endereço:</h2>\r\n                <Form.Row>\r\n                    <Form.Group>\r\n                        <Form.Label>Cep:</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            value={model.cep}\r\n                            name=\"cep\" \r\n                            disabled \r\n                            />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Logradouro:</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            name=\"logradouro\" \r\n                            value={model.logradouro}\r\n                            disabled \r\n                            />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Bairro:</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            name=\"bairro\" \r\n                            value={model.bairro}\r\n                            disabled \r\n                            />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>Localidade:</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            name=\"localidade\" \r\n                            value={model.localidade}\r\n                            disabled \r\n                            />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col}>\r\n                        <Form.Label>UF:</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            name=\"uf\" \r\n                            value={model.uf}\r\n                            disabled \r\n                            />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Group   >\r\n                    <Form.Label>Complemento:</Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={3}\r\n                        type=\"textarea\" \r\n                        name=\"complemento\" \r\n                        value={model.complemento}\r\n                        disabled \r\n                        />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"success\" type=\"submit\" >\r\n                    Editar\r\n                    <Link to={`/paciente/${params.id}/editar`} />\r\n                </Button>\r\n                \r\n            </Form>\r\n\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\nexport default Paciente;","D:\\Codes\\Front-end Trabalho Final\\web\\src\\pages\\Ficha.tsx",["86","87","88","89","90","91","92"],"import React, {ChangeEvent,useEffect,useState,FormEvent} from 'react';\r\nimport {useHistory} from 'react-router-dom'\r\nimport {Link} from 'react-router-dom';\r\nimport { Button,Form,Container,Table,Col} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nimport {useParams} from 'react-router-dom'\r\nimport api from '../services/api';\r\n\r\ninterface Paciente {\r\n\r\n    ficha: string;\r\n    \r\n}\r\n\r\ninterface PacienteParams {\r\n    id: string;\r\n}\r\n\r\nfunction Ficha (){\r\n\r\n    const params = useParams<PacienteParams>();\r\n\r\n    const [model,setModel] = useState<Paciente>({\r\n\r\n        ficha: ''\r\n\r\n    })\r\n\r\n    function uptadeModel(e: ChangeEvent<HTMLInputElement>) {\r\n        \r\n        setModel({\r\n            ...model,\r\n            [e.target.name]: e.target.value\r\n\r\n        })\r\n    } \r\n\r\n    useEffect(() =>{\r\n        FindFicha(params.id)\r\n    }, [params.id])\r\n\r\n    async function FindFicha (id: string){\r\n     \r\n        const response = await api.get(`paciente/${params.id}`);\r\n\r\n        setModel({\r\n\r\n            ficha: response.data.ficha\r\n            \r\n        })\r\n         \r\n    }\r\n    return (\r\n        <Container>\r\n           \r\n            <Form>\r\n                <h2>Ficha:</h2>\r\n                <Form.Group>\r\n                    \r\n                    <Form.Control as=\"textarea\" rows={30}\r\n                        type=\"textarea\" \r\n                        name=\"ficha\"\r\n                        disabled \r\n                        \r\n                        value={model.ficha}\r\n                        onChange={(e: ChangeEvent<HTMLInputElement>) =>  uptadeModel(e)}\r\n                    />\r\n                </Form.Group>\r\n\r\n            </Form>\r\n\r\n\r\n        </Container>\r\n        \r\n    );\r\n\r\n    \r\n\r\n}\r\n\r\nexport default Ficha;",{"ruleId":"93","severity":1,"message":"94","line":3,"column":9,"nodeType":"95","messageId":"96","endLine":3,"endColumn":13},{"ruleId":"93","severity":1,"message":"97","line":4,"column":10,"nodeType":"95","messageId":"96","endLine":4,"endColumn":16},{"ruleId":"93","severity":1,"message":"98","line":4,"column":17,"nodeType":"95","messageId":"96","endLine":4,"endColumn":21},{"ruleId":"93","severity":1,"message":"99","line":4,"column":22,"nodeType":"95","messageId":"96","endLine":4,"endColumn":31},{"ruleId":"93","severity":1,"message":"94","line":3,"column":9,"nodeType":"95","messageId":"96","endLine":3,"endColumn":13},{"ruleId":"93","severity":1,"message":"100","line":8,"column":8,"nodeType":"95","messageId":"96","endLine":8,"endColumn":14},{"ruleId":"93","severity":1,"message":"101","line":10,"column":9,"nodeType":"95","messageId":"96","endLine":10,"endColumn":18},{"ruleId":"93","severity":1,"message":"102","line":12,"column":10,"nodeType":"95","messageId":"96","endLine":12,"endColumn":14},{"ruleId":"103","severity":1,"message":"104","line":37,"column":10,"nodeType":"95","messageId":"105","endLine":37,"endColumn":18},{"ruleId":"93","severity":1,"message":"106","line":78,"column":15,"nodeType":"95","messageId":"96","endLine":78,"endColumn":23},{"ruleId":"93","severity":1,"message":"106","line":89,"column":15,"nodeType":"95","messageId":"96","endLine":89,"endColumn":23},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"93","severity":1,"message":"98","line":4,"column":17,"nodeType":"95","messageId":"96","endLine":4,"endColumn":21},{"ruleId":"93","severity":1,"message":"94","line":3,"column":9,"nodeType":"95","messageId":"96","endLine":3,"endColumn":13},{"ruleId":"93","severity":1,"message":"111","line":4,"column":32,"nodeType":"95","messageId":"96","endLine":4,"endColumn":37},{"ruleId":"112","severity":1,"message":"113","line":58,"column":8,"nodeType":"114","endLine":58,"endColumn":19,"suggestions":"115"},{"ruleId":"93","severity":1,"message":"106","line":72,"column":15,"nodeType":"95","messageId":"96","endLine":72,"endColumn":23},{"ruleId":"93","severity":1,"message":"106","line":84,"column":15,"nodeType":"95","messageId":"96","endLine":84,"endColumn":23},{"ruleId":"107","replacedBy":"116"},{"ruleId":"109","replacedBy":"117"},{"ruleId":"93","severity":1,"message":"118","line":2,"column":24,"nodeType":"95","messageId":"96","endLine":2,"endColumn":30},{"ruleId":"93","severity":1,"message":"119","line":2,"column":31,"nodeType":"95","messageId":"96","endLine":2,"endColumn":36},{"ruleId":"93","severity":1,"message":"120","line":1,"column":40,"nodeType":"95","messageId":"96","endLine":1,"endColumn":49},{"ruleId":"93","severity":1,"message":"121","line":3,"column":36,"nodeType":"95","messageId":"96","endLine":3,"endColumn":39},{"ruleId":"93","severity":1,"message":"100","line":8,"column":8,"nodeType":"95","messageId":"96","endLine":8,"endColumn":14},{"ruleId":"93","severity":1,"message":"106","line":64,"column":15,"nodeType":"95","messageId":"96","endLine":64,"endColumn":23},{"ruleId":"93","severity":1,"message":"122","line":1,"column":47,"nodeType":"95","messageId":"96","endLine":1,"endColumn":56},{"ruleId":"93","severity":1,"message":"111","line":4,"column":32,"nodeType":"95","messageId":"96","endLine":4,"endColumn":37},{"ruleId":"103","severity":1,"message":"123","line":34,"column":10,"nodeType":"95","messageId":"105","endLine":34,"endColumn":18},{"ruleId":"93","severity":1,"message":"124","line":36,"column":11,"nodeType":"95","messageId":"96","endLine":36,"endColumn":18},{"ruleId":"112","severity":1,"message":"113","line":60,"column":8,"nodeType":"114","endLine":60,"endColumn":19,"suggestions":"125"},{"ruleId":"93","severity":1,"message":"126","line":62,"column":14,"nodeType":"95","messageId":"96","endLine":62,"endColumn":25},{"ruleId":"93","severity":1,"message":"122","line":1,"column":47,"nodeType":"95","messageId":"96","endLine":1,"endColumn":56},{"ruleId":"93","severity":1,"message":"127","line":2,"column":9,"nodeType":"95","messageId":"96","endLine":2,"endColumn":19},{"ruleId":"93","severity":1,"message":"94","line":3,"column":9,"nodeType":"95","messageId":"96","endLine":3,"endColumn":13},{"ruleId":"93","severity":1,"message":"97","line":4,"column":10,"nodeType":"95","messageId":"96","endLine":4,"endColumn":16},{"ruleId":"93","severity":1,"message":"111","line":4,"column":32,"nodeType":"95","messageId":"96","endLine":4,"endColumn":37},{"ruleId":"93","severity":1,"message":"128","line":4,"column":38,"nodeType":"95","messageId":"96","endLine":4,"endColumn":41},{"ruleId":"112","severity":1,"message":"129","line":42,"column":8,"nodeType":"114","endLine":42,"endColumn":19,"suggestions":"130"},"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Form' is defined but never used.","'Container' is defined but never used.","'moment' is defined but never used.","'useParams' is defined but never used.","'time' is defined but never used.","@typescript-eslint/no-redeclare","'Marcacao' is already defined.","redeclared","'response' is assigned a value but never used.","no-native-reassign",["131"],"no-negated-in-lhs",["132"],"'Table' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'findPaciente'. Either include it or remove the dependency array.","ArrayExpression",["133"],["131"],["132"],"'Switch' is defined but never used.","'Route' is defined but never used.","'useEffect' is defined but never used.","'Row' is defined but never used.","'FormEvent' is defined but never used.","'Paciente' is already defined.","'history' is assigned a value but never used.",["134"],"'uptadeModel' is defined but never used.","'useHistory' is defined but never used.","'Col' is defined but never used.","React Hook useEffect has a missing dependency: 'FindFicha'. Either include it or remove the dependency array.",["135"],"no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"136","fix":"138"},{"desc":"139","fix":"140"},"Update the dependencies array to be: [findPaciente, params.id]",{"range":"141","text":"142"},{"range":"143","text":"142"},"Update the dependencies array to be: [FindFicha, params.id]",{"range":"144","text":"145"},[1197,1208],"[findPaciente, params.id]",[1192,1203],[863,874],"[FindFicha, params.id]"]